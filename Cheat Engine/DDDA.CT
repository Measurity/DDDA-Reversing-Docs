<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="29">
  <CheatEntries>
    <CheatEntry>
      <ID>22</ID>
      <Description>"Game states"</Description>
      <Options moHideChildren="1" moAllowManualCollapseAndExpand="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>10</ID>
          <Description>"IsPlayingAudio?"</Description>
          <VariableType>Byte</VariableType>
          <Address>0019D857</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"IsGamePlaying?"</Description>
          <VariableType>Byte</VariableType>
          <Address>0019FDE6</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>12</ID>
          <Description>"IsCursorLocked?"</Description>
          <VariableType>Byte</VariableType>
          <Address>DDDA.exe+14D1040</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>63</ID>
          <Description>"Player"</Description>
          <Options moHideChildren="1"/>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>DDDA.exe+14FA4D8</Address>
          <Offsets>
            <Offset>0</Offset>
            <Offset>3DEC</Offset>
            <Offset>48</Offset>
            <Offset>0</Offset>
            <Offset>30</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>65</ID>
              <Description>"HP"</Description>
              <VariableType>Float</VariableType>
              <Address>+29C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>66</ID>
              <Description>"Max HP"</Description>
              <VariableType>Float</VariableType>
              <Address>+2A0</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>67</ID>
              <Description>"Recoverable HP"</Description>
              <VariableType>Float</VariableType>
              <Address>+2A4</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>68</ID>
              <Description>"Stamina"</Description>
              <VariableType>Float</VariableType>
              <Address>+2A8</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>78</ID>
              <Description>"Max stamina (Base)"</Description>
              <VariableType>Float</VariableType>
              <Address>+2AC</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>79</ID>
              <Description>"Max stamina (Bonus)"</Description>
              <VariableType>Float</VariableType>
              <Address>+2B0</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>81</ID>
              <Description>"EXP"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+2C4</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>82</ID>
              <Description>"EXP needed"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+2C8</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>69</ID>
              <Description>"Gold"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+348</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>70</ID>
              <Description>"Rift Crystals"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+34C</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>71</ID>
              <Description>"Level"</Description>
              <VariableType>4 Bytes</VariableType>
              <Address>+700</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>72</ID>
              <Description>"Name"</Description>
              <VariableType>String</VariableType>
              <Length>32</Length>
              <Unicode>0</Unicode>
              <CodePage>0</CodePage>
              <ZeroTerminate>1</ZeroTerminate>
              <Address>+70C</Address>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>73</ID>
          <Description>"Inventories"</Description>
          <Options moHideChildren="1"/>
          <VariableType>4 Bytes</VariableType>
          <Address>DDDA.exe+14FA4D4</Address>
          <Offsets>
            <Offset>0</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>74</ID>
              <Description>"Player"</Description>
              <Options moHideChildren="1"/>
              <VariableType>4 Bytes</VariableType>
              <Address>+0</Address>
              <CheatEntries>
                <CheatEntry>
                  <ID>75</ID>
                  <Description>"Total amount of item types"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+180</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>61</ID>
                  <Description>"Amount of Curatives"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+194+14*0</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>76</ID>
                  <Description>"Amount of Tools"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+194+14*1</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>77</ID>
                  <Description>"Total weight"</Description>
                  <VariableType>Float</VariableType>
                  <Address>+3C4</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>53</ID>
      <Description>"Cheats"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>40</ID>
          <Description>"Godmode - Physical Damage"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(address,"DDDA.exe"+376F82)
define(bytes,F3 0F 5C 44 24 0C)

[ENABLE]

assert(address,bytes)

label(return)

address:
  // Ignore direct damage value (partal godmode)
  nop 6
return:

[DISABLE]

address:
  db bytes
  // subss xmm0,[esp+0C]

{
// ORIGINAL CODE - INJECTION POINT: "DDDA.exe"+376F82

"DDDA.exe"+376F51: 57                       -  push edi
"DDDA.exe"+376F52: 8B F8                    -  mov edi,eax
"DDDA.exe"+376F54: F6 47 30 01              -  test byte ptr [edi+30],01
"DDDA.exe"+376F58: 0F 85 C9 00 00 00        -  jne DDDA.exe+377027
"DDDA.exe"+376F5E: 8B 87 B8 01 00 00        -  mov eax,[edi+000001B8]
"DDDA.exe"+376F64: F6 80 FC 0C 00 00 01     -  test byte ptr [eax+00000CFC],01
"DDDA.exe"+376F6B: 0F 85 B6 00 00 00        -  jne DDDA.exe+377027
"DDDA.exe"+376F71: F3 0F 10 47 08           -  movss xmm0,[edi+08]
"DDDA.exe"+376F76: 8B 8F B4 01 00 00        -  mov ecx,[edi+000001B4]
"DDDA.exe"+376F7C: F3 0F 11 44 24 04        -  movss [esp+04],xmm0
// ---------- INJECTING HERE ----------
"DDDA.exe"+376F82: F3 0F 5C 44 24 0C        -  subss xmm0,[esp+0C]
// ---------- DONE INJECTING  ----------
"DDDA.exe"+376F88: 56                       -  push esi
"DDDA.exe"+376F89: F3 0F 11 47 08           -  movss [edi+08],xmm0
"DDDA.exe"+376F8E: 85 C9                    -  test ecx,ecx
"DDDA.exe"+376F90: 74 3B                    -  je DDDA.exe+376FCD
"DDDA.exe"+376F92: 68 F8 55 99 01           -  push DDDA.exe+15955F8
"DDDA.exe"+376F97: E8 F4 C7 C8 FF           -  call DDDA.exe+3790
"DDDA.exe"+376F9C: 84 C0                    -  test al,al
"DDDA.exe"+376F9E: 74 2D                    -  je DDDA.exe+376FCD
"DDDA.exe"+376FA0: 8B B7 B4 01 00 00        -  mov esi,[edi+000001B4]
"DDDA.exe"+376FA6: F6 86 6C 20 00 00 02     -  test byte ptr [esi+0000206C],02
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>44</ID>
          <Description>"Godmode - DOT Damage"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(address,"DDDA.exe"+488F95)
define(bytes,F3 0F 11 4D 08)

[ENABLE]

assert(address,bytes)

label(return)

address:
  nop 5
return:

[DISABLE]

address:
  db bytes
  // movss [ebp+08],xmm1

{
// ORIGINAL CODE - INJECTION POINT: "DDDA.exe"+488F95

"DDDA.exe"+488F6E: 72 10                    -  jb DDDA.exe+488F80
"DDDA.exe"+488F70: 8B 87 EC 3D 00 00        -  mov eax,[edi+00003DEC]
"DDDA.exe"+488F76: 85 C0                    -  test eax,eax
"DDDA.exe"+488F78: 74 06                    -  je DDDA.exe+488F80
"DDDA.exe"+488F7A: 88 98 58 03 00 00        -  mov [eax+00000358],bl
"DDDA.exe"+488F80: F3 0F 10 44 24 1C        -  movss xmm0,[esp+1C]
"DDDA.exe"+488F86: 0F 57 DB                 -  xorps xmm3,xmm3
"DDDA.exe"+488F89: F3 0F 10 4D 08           -  movss xmm1,[ebp+08]
"DDDA.exe"+488F8E: F3 0F 58 C8              -  addss xmm1,xmm0
"DDDA.exe"+488F92: 0F 2F D9                 -  comiss xmm3,xmm1
// ---------- INJECTING HERE ----------
"DDDA.exe"+488F95: F3 0F 11 4D 08           -  movss [ebp+08],xmm1
// ---------- DONE INJECTING  ----------
"DDDA.exe"+488F9A: 72 43                    -  jb DDDA.exe+488FDF
"DDDA.exe"+488F9C: 0F 2E C3                 -  ucomiss xmm0,xmm3
"DDDA.exe"+488F9F: 9F                       -  lahf 
"DDDA.exe"+488FA0: F6 C4 44                 -  test ah,44
"DDDA.exe"+488FA3: 7B 3A                    -  jnp DDDA.exe+488FDF
"DDDA.exe"+488FA5: 8B 44 24 20              -  mov eax,[esp+20]
"DDDA.exe"+488FA9: 2B C3                    -  sub eax,ebx
"DDDA.exe"+488FAB: 74 1C                    -  je DDDA.exe+488FC9
"DDDA.exe"+488FAD: 2B C3                    -  sub eax,ebx
"DDDA.exe"+488FAF: 74 09                    -  je DDDA.exe+488FBA
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>88</ID>
      <Description>"WIP"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>86</ID>
          <Description>"Exp requirement multiplier (used in setExpRequirement())"</Description>
          <VariableType>Float</VariableType>
          <Address>2BD19630+4</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>97</ID>
          <Description>"Level up data"</Description>
          <Options moHideChildren="1"/>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>DDDA.exe+14FA4EC</Address>
          <Offsets>
            <Offset>868</Offset>
          </Offsets>
          <CheatEntries>
            <CheatEntry>
              <ID>89</ID>
              <Description>"Level up exp requirement"</Description>
              <Options moHideChildren="1"/>
              <ShowAsHex>1</ShowAsHex>
              <VariableType>4 Bytes</VariableType>
              <Address>+0</Address>
              <Offsets>
                <Offset>70</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>87</ID>
                  <Description>"Level 1/base exp requirement"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+0</Address>
                  <Offsets>
                    <Offset>8</Offset>
                    <Offset>0</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>96</ID>
                  <Description>"Level up exp mult"</Description>
                  <VariableType>Float</VariableType>
                  <Address>+0</Address>
                  <Offsets>
                    <Offset>4</Offset>
                    <Offset>8</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>90</ID>
                  <Description>"Level up exp step"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+0</Address>
                  <Offsets>
                    <Offset>8</Offset>
                    <Offset>4</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>95</ID>
                  <Description>"Next exp mult level threshold"</Description>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+0</Address>
                  <Offsets>
                    <Offset>8</Offset>
                    <Offset>C</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>98</ID>
                  <Description>"ESI DWORD PTR DDDA.exe+75C0FE"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <VariableType>4 Bytes</VariableType>
                  <Address>+0</Address>
                  <Offsets>
                    <Offset>4</Offset>
                    <Offset>8+4</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Comments>TODO:
1. Quality of Life changes
 - Allow mouse scroll on UI lists
 - EXP bar
 - Improve quest tracking (warn player before accepting a quest if it would fail other quests)
 - Speed up looting animations (or skip them)
2. New features
 - Custom items (with models?)
 - Custom monster drops
Inventory base struct of party member = [DDDA.exe+14FA4D4]+(Party_member_index*11E8)
Player inventory = [DDDA.exe+14FA4D4]+0
Main pawn inventory = [DDDA.exe+14FA4D4]+11E8
Item count per inventory page = [DDDA.exe+14FA4D4]+194+14*inventory_page_index
Item in inventory struct:
+0A: Item ID
+44: Weight
</Comments>
  <LuaScript>local gameProcessName = 'DDDA.exe'

function attachToDDDA()
  if proces == gameProcessName then return true end
  openProcess(gameProcessName)
  return process == gameProcessName
end

function pointerToCEString(address, ...)
  local ceAddressStr = tostring(address)
  for i,v in ipairs{...} do
    ceAddressStr = '[' .. ceAddressStr .. ']+' .. v
  end
  return ceAddressStr
end

function setSymbol(name, address, ...)
  unregisterSymbol(name)
  local ceAddress = pointerToCEString(address, unpack({...}))
  local saveToTable = false
  registerSymbol(name, ceAddress, not saveToTable)
end

function registerDddaSymbols()
  setSymbol('pInventories', 'DDDA.exe+14FA4D4')
  setSymbol('pPlayer', 'DDDA.exe+14FA4D8', '30', '0', '48', '3DEC')
end

if not attachToDDDA() then
  print('Failed to attached to Dragon\'s Dogma: Dark Arisen')
  return
end

-- TODO: Inject code on game load to capture pointers to player, enemies, etc
--registerDddaSymbols()
</LuaScript>
  <DisassemblerComments>
    <DisassemblerComment>
      <Address>"DDDA.exe"+589E0</Address>
      <Comment>Start of function 'set inventory weight'
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+589EC</Address>
      <Comment>inventory.weight = 0 (init before loop)
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+58A26</Address>
      <Comment>Start of sum(item.weight) loop
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+58AA9</Address>
      <Comment>loop_item_weight = item.weight
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+58AD3</Address>
      <Comment>sum = 0
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+58AD6</Address>
      <Comment>sum = weight scalar (always 1?)
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+58ADA</Address>
      <Comment>sum = scalar * loop_item_weight
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+58ADE</Address>
      <Comment>sum += inventory.weight
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+58AE6</Address>
      <Comment>loop_index++
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+58AE7</Address>
      <Comment>inventory.weight = sum
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+58AEF</Address>
      <Comment>loop_index &lt; inventory.length
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+58AF2</Address>
      <Comment>goto start_of_loop
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+65EF6</Address>
      <Comment>Store one address from actor positions array?
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+66BFD</Address>
      <Comment>Set X pos
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+66C02</Address>
      <Comment>Set Y pos
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+66C07</Address>
      <Comment>Set Z pos
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+376F82</Address>
      <Comment>Substract actor HP from damage field of damage obj
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+376F89</Address>
      <Comment>Damage actor from (physical) hit
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+38239B</Address>
      <Comment>xmm2 = actor.maxStamina
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+39E95F</Address>
      <Comment>Align actor pos Z with ground collision
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+44C059</Address>
      <Comment>Call 'handleActorMovement' ?
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+44D042</Address>
      <Comment>Move in X axis
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+44D052</Address>
      <Comment>Gravity (falling) - can still walk down
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+44D062</Address>
      <Comment>Move in Y axis
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+488F95</Address>
      <Comment>Actor DOT damage
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+75BF83</Address>
      <Comment>eax = 0
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+75BF88</Address>
      <Comment>eax = calculateExpRequirement()
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+75BF8E</Address>
      <Comment>actor.expRequirement = eax
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+75C080</Address>
      <Comment>%s
updateExpRequirement()
Called after level has increased
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+75C095</Address>
      <Comment>ebp = current level
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+75C099</Address>
      <Comment>cmp current_level,1
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+75C09C</Address>
      <Comment>jump if lvl != 1
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+75C09E</Address>
      <Comment>eax = exp_requirement  = 200
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+75C0A1</Address>
      <Comment>Cleanup the stack before returning..
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+75C0B0</Address>
      <Comment>ecx = 6 ??
Type ID?
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+75C0B4</Address>
      <Comment>edi = level 1 exp requirement = 200
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+75C0B7</Address>
      <Comment>eax = exp increase step = 220
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+75C0BA</Address>
      <Comment>[esp+20] = 200
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+75C0C3</Address>
      <Comment>eax = 0
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+75C0C5</Address>
      <Comment>cmp current level, 2
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+75C0C9</Address>
      <Comment>eax = 220
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+75C0CD</Address>
      <Comment>FPU PUSH loop_previous_exp
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+75C0D3</Address>
      <Comment>ensure exp requirement is non negative
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+75C0DB</Address>
      <Comment>%s
size of exp multi struct
Used to get new exp requirement multiplier 
after predefined level thresholds
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+75C0E3</Address>
      <Comment>cmp loop_level, [ecx+08]

</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+75C0E6</Address>
      <Comment>loop_level &lt; [ecx+08]
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+75C0E8</Address>
      <Comment>eax = 8
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+75C0EF</Address>
      <Comment>esi = a struct of the exp multiplier lookup table
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+75C0FE</Address>
      <Comment>FPU 0 = exp_mult_lookup_entry.value
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+75C101</Address>
      <Comment>[esp+20] = exp requirement of previous loop
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+75C105</Address>
      <Comment>FPU 0 = FPU 0 * FPU 1
FPU 0 = exp_req_increase_mult * exp_req_increase_step
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+75C107</Address>
      <Comment>Push exp needed (previous level) on FPU.
Moves all FPU values 1 register down
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+75C115</Address>
      <Comment>Store CPU math control (not sure what it does)
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+75C119</Address>
      <Comment>Inc iteration counter
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+75C11F</Address>
      <Comment>FPU 0 = FPU 0 + FPU 1
FPU 0 = loop_previous_exp + (220 * 1.3)
Moves all FPU values up
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+75C12E</Address>
      <Comment>[esp+14] = exp_requirement
shifts FPU values up (FPU 7 = FPU 0)
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+75C132</Address>
      <Comment>eax = exp_requirement
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+75C136</Address>
      <Comment>edi = exp_requirement
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+75C138</Address>
      <Comment>Restore CPU control number
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+75C13C</Address>
      <Comment>edx = current iteration
ebp = current actor level
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+75C13E</Address>
      <Comment>jump if actor.level &gt; loop_level
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+77E5AA</Address>
      <Comment>%s
Inventory offset based on inventory index
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+7814F7</Address>
      <Comment>esp = staminaChangeStruct
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+7814FC</Address>
      <Comment>call 'setActorStamina(esp)'
XMM0 = current stamina
XMM1 = 200 ??
XMM2 = max stamina
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+78152D</Address>
      <Comment>call 'setActorStamina(staminaChangeStruct)'
esp = staminaChangeStruct
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+7815C6</Address>
      <Comment>Sets EAX to actor base address
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+781E38</Address>
      <Comment>Start of 'setActorStamina(staminaChangeStruct)'
esp = base address of stamina change struct
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+781E3C</Address>
      <Comment>ebp = ??somestruct??.actor
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+781E4E</Address>
      <Comment>xmm1 = staminaChange.value
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+781F6A</Address>
      <Comment>xmm1 = stamina_delta (either positive or negative)
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+781F70</Address>
      <Comment>xmm4 = 0
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+781F73</Address>
      <Comment>stamina = actor.stamina
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+781F7B</Address>
      <Comment>xmm5 = xmm0 = actor.stamina
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+781F7E</Address>
      <Comment>stamina += stamina_delta
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+781F82</Address>
      <Comment>actor.stamina = stamina
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+781F8A</Address>
      <Comment>edi = address of actor struct
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+781FFA</Address>
      <Comment>cmp max stamina with cur stamina
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+9F0F0B</Address>
      <Comment>0 = freeze game
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+9F1952</Address>
      <Comment>1 = Game should run
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+A04DDF</Address>
      <Comment>1 = Cursor locked (hidden)
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+A04EF1</Address>
      <Comment>Skip showing cursor if 'already shown'
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"DDDA.exe"+A04F02</Address>
      <Comment>0 = cursor is unlocked (not clipped to game)
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"XAudio2_7.dll"+430E8</Address>
      <Comment>Guess: If EDX is 1 then get next audio wave
AKA: Play game sound
</Comment>
    </DisassemblerComment>
  </DisassemblerComments>
</CheatTable>
